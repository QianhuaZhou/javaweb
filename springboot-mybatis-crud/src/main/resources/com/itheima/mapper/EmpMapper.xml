<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--从mybatis中文网copy过来的-->
<mapper namespace="com.itheima.mapper.EmpMapper">
    <sql id="commonSelect">
        select id, username, password, name, gender, image, job, entrydate, dept_id, create_time, update_time
        from emp
    </sql>

    <!--动态更新员工-->
    <update id="update2">
        update emp
        /*首行插入set关键词,删除额外都好(用于update语句)*/
        <set>
            <if test="username != null"> username    = #{username},</if>
            <if test="name != null"> name        = #{name},</if>
            <if test="name != null"> gender      = #{gender},</if>
            <if test="image != null"> image       = #{image},</if>
            <if test="job != null"> job         = #{job},</if>
            <if test="entrydate != null"> entrydate   = #{entrydate},</if>
            <if test="deptId != null"> dept_id     = #{deptId},</if>
            <if test="updateTime != null"> update_time = #{updateTime}</if>
        </set>
        where id = #{id}
    </update>

    <!--单条记录封装的类型-->
    <!--id需与Mapper接口中的方法名一致,并保持返回类型一直, resultType:单条记录封装的类型(Emp)-->
    <!--where标签动态生成where,动态增删and-->
    <select id="list" resultType="com.itheima.pojo.Emp">
        <include refid="commonSelect"/>
        <where>
            <if test="name != null">
                name like concat('%', #{name},'%')
            </if>
            <if test="gender != null">
                and gender = #{gender}
            </if>
            <if test="begin != null and end != null">
                and entrydate between #{begin} and #{end}
            </if>
        </where>
        order by update_time desc
    </select>

    <!--批量删除员工-->
    <!--
    collection:遍历的集合
    item:遍历的远处
    separator:分隔符
    open:遍历前需拼接的片段
    close:遍历后需拼接的片段
    -->
    <delete id="deleteByIds">
        delete from emp where id in
        <foreach collection="ids"  item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>
</mapper>